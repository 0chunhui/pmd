/* Generated By:JavaCC: Do not edit this line. PLSQLParserVisitor.java Version 5.0 */
package net.sourceforge.pmd.lang.plsql.ast;


public class PLSQLParserVisitorAdapter implements PLSQLParserVisitor
{
  public Object visit(SimpleNode node, Object data) { 
	node.childrenAccept(this, data);
        return null;
    }


  public Object visit(ASTinput node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTsqlPlusCommand node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTglobal node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTglobalBlock node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTpackageSpec node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTpackageBody node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTdeclarativeUnit node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTdeclarativeSection node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTCompilationDeclarationFragment node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTprogramUnit node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTparameterDeclaration node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTdatatype node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTCompilationDataType node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTcollection_type_name node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTscalar_datatype_name node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTDateTimeLiteral node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTexceptionHandler node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTskip2NextTerminator node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTskip2NextOccurrence node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTskipPastNextOccurrence node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTskip2NextTokenOccurrence node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTskipPastNextTokenOccurrence node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTread2NextOccurrence node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTreadPastNextOccurrence node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTsqlStatement node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTwrappedObject node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTstatement node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTsubtype_definition node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTfieldDeclaration node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTcollection_type_definition node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTcollectionDeclaration node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTobjectDeclaration node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTcallSpecTail node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTcursorUnit node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTcursorSpec node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTcursorBody node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTExpression node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTCompilationExpression node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTAssignment node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTCaseExpression node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTLikeExpression node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTTrimExpression node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTObjectExpression node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTConditionalOrExpression node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTConditionalAndExpression node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTEqualityExpression node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTRelationalExpression node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTAdditiveExpression node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTStringExpression node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTMultiplicativeExpression node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTUnaryExpression node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTUnaryExpressionNotPlusMinus node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTPrimaryExpression node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTPrimaryPrefix node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTPrimarySuffix node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTLiteral node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTStringLiteral node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTBooleanLiteral node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTNullLiteral node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTMultiSetCondition node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTnumericLiteral node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTName node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTqualifiedName node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTArguments node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTArgumentList node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTArgument node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTvariableOrConstantDeclaration node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTdatatypeDeclaration node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTpragma node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTexceptionDeclaration node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTparallel_clause node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTtable node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTtableColumn node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTview node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTviewColumn node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTcomment node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTtypeMethod node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTtypeSpec node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTalterTypeSpec node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTattributeDeclaration node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTattribute node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTpragma_clause node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTtriggerUnit node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTtiming_point_section node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTcompound_trigger_block node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTnon_dml_trigger node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTddl_event node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTdatabase_event node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTnon_dml_event node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTalterTrigger node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTKEYWORD_RESERVED node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTKEYWORD_UNRESERVED node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTID node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTunqualifiedID node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTqualifiedID node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTtypeKeyword node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTjavaInterfaceClass node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


  public Object visit(ASTequalsOldIDNewID node, Object data) { 
        return visit((SimpleNode) node, data); 
    }


}
/* JavaCC - OriginalChecksum=a859ce76bdb6369e3fdc73af100c176c (do not edit this line) */
