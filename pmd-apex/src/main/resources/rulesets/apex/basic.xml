<?xml version="1.0"?>

<ruleset name="Basic Apex" xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">

	<description>Rules concerning basic Apex guidelines.</description>

	<rule name="ConsistentReturn" since="5.0"
		  message="A method should not mix 'return' statements with and without a result."
		  class="net.sourceforge.pmd.lang.apex.rule.basic.ConsistentReturnRule"
		  externalInfoUrl="${pmd.website.baseurl}/rules/apex/basic.html#ConsistentReturn">
		
		<description>
			Apex (as Java on which it is based) does provide four return types on methods, and therefore there is no solid rule as to their usage.
			However, when a method does use returns they should all have a value, or all with no value.  Mixed return
			usage is likely a bug, or at best poor style.
	    </description>
		<priority>2</priority>
		<example>
	  <![CDATA[
	// Ok
	Boolean foo() {
	   if(condition) {
	      return true;
	   }
	   
	   return false;
	}
	
	// Bad
	Boolean bar() {
	   if(condition) {
	      return;
	   }
	   
	   return false;
	}
	]]>
      </example>
	</rule>

</ruleset>
